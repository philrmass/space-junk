{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/gl-matrix/esm/common.js","webpack:///./node_modules/gl-matrix/esm/mat4.js","webpack:///./src/utilities/matrices.js","webpack:///./src/utilities/vertices.js","webpack:///./src/background.js","webpack:///./src/characters.js","webpack:///./src/spaceJunk.js","webpack:///./src/bombBoss.js","webpack:///./src/utilities/objects.js","webpack:///./src/utilities/shaders.js","webpack:///./src/data/shaders/color.js","webpack:///./src/data/shaders/texture.js","webpack:///./src/programs.js","webpack:///./src/textures.js","webpack:///./src/data/textures/bombBoss.png","webpack:///./src/data/textures/spaceJunk.png","webpack:///./src/utilities/textures.js","webpack:///./src/index.js","webpack:///./src/gl.js","webpack:///./src/input.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EPSILON","ARRAY_TYPE","Float32Array","Array","Math","random","PI","out","clone","a","copy","fromValues","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","identity","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b","b0","b1","b2","b3","translate","v","x","y","z","scale","rotate","rad","axis","b12","b20","b21","b22","len","hypot","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","Infinity","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","targetTo","target","str","frob","add","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","arguments","length","mul","sub","initMatrices","width","height","modelview","scaleX","scaleY","projection","translatex","translateY","bindMatricesToProgram","gl","matrices","program","modelviewLoc","getUniformLocation","modelviewName","projectionLoc","projectionName","uniformMatrix4fv","bindVerticesToProgram","set","positionLoc","getAttribLocation","positionName","colorLoc","colorName","coordLoc","coordName","bindBuffer","ARRAY_BUFFER","position","buf","vertexAttribPointer","size","FLOAT","enableVertexAttribArray","color","coord","incrementColor","index","amt","component","slice","updateCharacters","state","input","spaceJunk","characters","background","hasFocus","keys","console","log","updateSpaceJunk","bombBoss","updateBombBoss","drawCharacters","map","character","data","texture","initObjectData","bufs","createBuffer","bufferData","STATIC_DRAW","count","bindDataToVertices","initProgram","vsSource","fsSource","params","vs","createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","shaderSource","prog","createProgram","attachShader","compileShader","shader","compiled","colorParams","textureParams","samplerName","initPrograms","defs","push","linkProgram","getProgramParameter","LINK_STATUS","error","getProgramInfoLog","getShaderInfoLog","def","deleteShader","compilePrograms","reduce","all","initTextures","image","url","createTexture","Image","onload","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","src","loadTexture","window","document","getElementById","getContext","canvas","style","initGl","textures","programs","innerWidth","innerHeight","initState","updateInput","frame","lastTimestamp","lastKeys","onkeydown","e","timestamp","dt","initInput","requestAnimationFrame","update","updateGl","now","Date","g","total","updateBackground","updateState","vao","createVertexArray","bindVertexArray","clearColor","clear","COLOR_BUFFER_BIT","drawBackground","sets","sampler","useProgram","activeTexture","TEXTURE0","uniform1i","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","viewport","clientWidth","clientHeight","drawArrays","TRIANGLE_STRIP","draw"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import { mat4 } from 'gl-matrix';\n\nexport function initMatrices({ width, height }) {\n  const modelview = mat4.create();\n  const scaleX = 2 / width;\n  const scaleY = 2 / height;\n  mat4.scale(modelview, modelview, [scaleX, scaleY, 1]);\n\n  const projection = mat4.create();\n  const translatex = -width / 2;\n  const translateY = -height / 2;\n  mat4.translate(modelview, modelview, [translatex, translateY, 0]);\n\n  return { modelview, projection };\n}\n\nexport function bindMatricesToProgram(gl, matrices, program) {\n  const { modelview, projection } = matrices;\n\n  const modelviewLoc = gl.getUniformLocation(program, program.modelviewName);\n  const projectionLoc = gl.getUniformLocation(program, program.projectionName);\n\n  gl.uniformMatrix4fv(modelviewLoc, false, modelview);\n  gl.uniformMatrix4fv(projectionLoc, false, projection);\n}\n\n/*\nconst fov = 20 * Math.PI / 180;\nconst aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\nconst near = 0.1;\nconst far = 100.0;\n\nmat4.perspective(projection, fov, aspect, near, far);\nmat4.translate(modelView, modelView, [0, 0, -6]);\nmat4.rotate(modelView, modelView, rotation.x, [1, 0, 0]);\nmat4.rotate(modelView, modelView, rotation.y, [0, 1, 0]);\n*/\n","export function bindVerticesToProgram(gl, set, program) {\n  const positionLoc = gl.getAttribLocation(program, program.positionName);\n  const colorLoc = gl.getAttribLocation(program, program.colorName);\n  const coordLoc = gl.getAttribLocation(program, program.coordName);\n\n  if (positionLoc >= 0) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, set.position.buf);\n    gl.vertexAttribPointer(positionLoc, set.position.size, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLoc);\n  }\n\n  if (colorLoc >= 0) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, set.color.buf);\n    gl.vertexAttribPointer(colorLoc, set.color.size, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(colorLoc);\n  }\n\n  if (coordLoc >= 0) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, set.coord.buf);\n    gl.vertexAttribPointer(coordLoc, set.coord.size, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(coordLoc);\n  }\n}\n\nexport function bindDataToVertices(gl, data) {\n  const bufs = {};\n\n  if (data.position) {\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data.position.data), gl.STATIC_DRAW);\n    const count = data.position.data.length / data.position.size;\n\n    bufs.position = {\n      buf,\n      count,\n    };\n  }\n\n  if (data.color) {\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data.color.data), gl.STATIC_DRAW);\n    const count = data.color.data.length / data.color.size;\n\n    bufs.color = {\n      buf,\n      count,\n    };\n  }\n\n  if (data.coord) {\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data.coord.data), gl.STATIC_DRAW);\n    const count = data.coord.data.length / data.coord.size;\n\n    bufs.coord = {\n      buf,\n      count,\n    };\n  }\n\n  return {\n    position: {\n      ...data.position,\n      ...bufs.position,\n    },\n    color: {\n      ...data.color,\n      ...bufs.color,\n    },\n    coord: {\n      ...data.coord,\n      ...bufs.coord,\n    },\n    texture: data.texture,\n    program: data.program,\n  };\n}\n","export function initBackground() {\n  const width = window.innerWidth;\n  const height = window.innerHeight;\n\n  return {\n    width,\n    height,\n    color: [0.0, 0.0, 0.0],\n  };\n}\n\nexport function updateBackground({ gl, background }) {\n  const width = gl.canvas.width;\n  const height = gl.canvas.height;\n\n  const now = Date.now();\n  let color = background.color;\n  const inc = 0.001;\n  const r = (now & 16) ? 1 : 0;\n  const g = (now & 8) ? 1 : 0;\n  const b = (now & 4) ? 1 : 0;\n  const total = r + g + b + 0.00000000000001;\n  color = incrementColor(color, 0, inc * (r / total));\n  color = incrementColor(color, 1, inc * (g / total));\n  color = incrementColor(color, 2, inc * (b / total));\n\n  return {\n    width,\n    height,\n    color,\n  };\n}\n\nfunction incrementColor(color, index, amt) {\n  let component = color[index] + amt;\n  if (component < 0) {\n    component += 1;\n  }\n  if (component > 1) {\n    component -= 1;\n  }\n  return [...color.slice(0, index), component, ...color.slice(index + 1)];\n}\n\nexport function drawBackground({ gl, background }) {\n  gl.clearColor(...background.color, 1.0);\n  //gl.clearDepth(1.0);\n  //gl.depthFunc(gl.LEQUAL);\n  //gl.enable(gl.DEPTH_TEST);\n  gl.clear(gl.COLOR_BUFFER_BIT); //| gl.DEPTH_BUFFER_BIT);\n}\n\n","import { bindDataToVertices } from './utilities/vertices';\nimport { initObjectData } from './utilities/objects';\nimport { initSpaceJunk, updateSpaceJunk } from './spaceJunk';\nimport { initBombBoss, updateBombBoss } from './bombBoss';\n\nexport function initCharacters() {\n  const spaceJunk = initSpaceJunk();\n  const bombBoss = initBombBoss();\n\n  return {\n    spaceJunk,\n    bombBoss,\n  };\n}\n\nexport function updateCharacters(state, input) {\n  const spaceJunk = updateSpaceJunk(state, input);\n  const bombBoss = updateBombBoss(state, input);\n\n  return {\n    bombBoss,\n    spaceJunk,\n  };\n}\n\nexport function drawCharacters({ gl, characters }) {\n  const { bombBoss, spaceJunk } = characters;\n\n  const all = [bombBoss, spaceJunk];\n  const datas = all.map((character) => initObjectData(character));\n  const sets = datas.map((data) => bindDataToVertices(gl, data));\n\n  return sets;\n}\n","export function initSpaceJunk() {\n  return {\n    x: 100,\n    y: 100,\n    width: 50,\n    height: 150,\n    program: 'texture',\n    texture: 'spaceJunk',\n  };\n}\n\nexport function updateSpaceJunk(\n  { characters, background },\n  { hasFocus, keys },\n) {\n  const { spaceJunk } = characters;\n\n  if (keys.length > 0) {\n    console.log(`KEYS: [${keys}]`);\n  }\n\n  if (hasFocus) {\n    if (keys.length > 0) {\n      if (keys[0] === 'ArrowRight') {\n        spaceJunk.x = spaceJunk.x + 5;\n      } else if (keys[0] === 'ArrowLeft') {\n        spaceJunk.x = spaceJunk.x - 5;\n      } else if (keys[0] === 'ArrowUp') {\n        spaceJunk.y = spaceJunk.y + 5;\n      } else if (keys[0] === 'ArrowDown') {\n        spaceJunk.y = spaceJunk.y - 5;\n      }\n    }\n\n    if (spaceJunk.x > background.width) {\n      spaceJunk.x -= background.width;\n    }\n    if (spaceJunk.y > background.height) {\n      spaceJunk.y -= background.height;\n    }\n  }\n\n  return spaceJunk;\n}\n","export function initBombBoss() {\n  return {\n    x: 0,\n    y: 200,\n    width: 200,\n    height: 200,\n    program: 'texture',\n    texture: 'bombBoss',\n  };\n}\n\nexport function updateBombBoss(\n  { characters, background },\n  { hasFocus },\n) {\n  const { bombBoss } = characters;\n\n  if (hasFocus) {\n    bombBoss.x = bombBoss.x + 5;\n    bombBoss.y = bombBoss.y + 5;\n\n    if (bombBoss.x > background.width) {\n      bombBoss.x -= background.width;\n    }\n    if (bombBoss.y > background.height) {\n      bombBoss.y -= background.height;\n    }\n  }\n\n  return bombBoss;\n}\n","export function initObjectData(object) {\n  const { x, y, width, height } = object;\n\n  const positionSize = 2;\n  const positionData = [\n    x, y,\n    x + width, y,\n    x, y + height,\n    x + width, y + height,\n  ];\n\n  const colorSize = 4;\n  const colorData = [\n    1.0, 0.0, 0.0, 0.0,\n    1.0, 0.5, 0.0, 0.8,\n    1.0, 1.0, 0.0, 0.8,\n    0.5, 1.0, 0.0, 0.8,\n  ];\n\n  const coordSize = 2;\n  const coordData = [\n    0.0, 0.0,\n    1.0, 0.0,\n    0.0, 1.0,\n    1.0, 1.0,\n  ];\n\n  return {\n    position: {\n      size: positionSize,\n      data: positionData,\n    },\n    color: {\n      size: colorSize,\n      data: colorData,\n    },\n    coord: {\n      size: coordSize,\n      data: coordData,\n    },\n    texture: object.texture,\n    program: object.program,\n  };\n}\n","export function initProgram(gl, name, vsSource, fsSource, params) {\n  const vs = gl.createShader(gl.VERTEX_SHADER);\n  const fs = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(vs, vsSource);\n  gl.shaderSource(fs, fsSource);\n  if (!vs || !fs) {\n    return null;\n  }\n\n  const prog = gl.createProgram();\n  gl.attachShader(prog, vs);\n  gl.attachShader(prog, fs);\n\n  return { name, prog, vs, fs, ...params };\n}\n\nexport function compilePrograms(gl, defs) {\n  for (const { vs, fs } of defs) {\n    compileShader(gl, vs);\n    compileShader(gl, fs);\n  }\n\n  for (const { prog } of defs) {\n    gl.linkProgram(prog);\n  }\n\n  for (const { prog, vs, fs } of defs) {\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n      console.error(`Link error: ${gl.getProgramInfoLog(prog)}`); // eslint-disable-line no-console\n      console.error(`  vs log: ${gl.getShaderInfoLog(vs)}`); // eslint-disable-line no-console\n      console.error(`  fs log: ${gl.getShaderInfoLog(fs)}`); // eslint-disable-line no-console\n    }\n  }\n\n  for (const def of defs) {\n    def.prog.positionName = def.positionName;\n    def.prog.colorName = def.colorName;\n    def.prog.coordName = def.coordName;\n    def.prog.coordName = def.coordName;\n    def.prog.modelviewName = def.modelviewName;\n    def.prog.projectionName = def.projectionName;\n    def.prog.samplerName = def.samplerName;\n  }\n\n  for (const { vs, fs } of defs) {\n    gl.deleteShader(vs);\n    gl.deleteShader(fs);\n  }\n\n  return defs.map(({ name, prog }) => ({ [name]: prog }));\n}\n\nfunction compileShader(gl, shader) {\n  if (shader.compiled) {\n    return;\n  }\n  gl.compileShader(shader);\n  shader.compiled = true;\n}\n","export const colorParams = {\n  positionName: 'pos0',\n  colorName: 'col0',\n  modelviewName: 'modelview',\n  projectionName: 'projection',\n};\n\nexport const colorVs = `\nattribute vec4 pos0;\nattribute vec4 col0;\nuniform mat4 modelview;\nuniform mat4 projection;\nvarying lowp vec4 vfCol0;\n\nvoid main() {\n  gl_Position = projection * modelview * pos0;\n  gl_PointSize = 2.0;\n  vfCol0 = col0;\n}\n`;\n\nexport const colorFs = `\nvarying lowp vec4 vfCol0;\n\nvoid main() {\n  gl_FragColor = vfCol0;\n}\n`;\n","export const textureParams = {\n  positionName: 'pos0',\n  coordName: 'crd0',\n  modelviewName: 'modelview',\n  projectionName: 'projection',\n  samplerName: 'sampler0',\n};\n\nexport const textureVs = `\nattribute vec4 pos0;\nattribute vec2 crd0;\nuniform mat4 modelview;\nuniform mat4 projection;\nvarying mediump vec2 vfCrd0;\n\nvoid main() {\n  gl_Position = projection * modelview * pos0;\n  vfCrd0 = crd0;\n}\n`;\n\nexport const textureFs = `\nvarying mediump vec2 vfCrd0;\nuniform sampler2D sampler0;\n\nvoid main() {\n  gl_FragColor = texture2D(sampler0, vfCrd0);\n}\n`;\n","import { initProgram, compilePrograms } from './utilities/shaders';\nimport { colorVs, colorFs, colorParams } from './data/shaders/color';\nimport { textureVs, textureFs, textureParams } from './data/shaders/texture';\n\nexport function initPrograms(gl) {\n  const defs = [];\n  defs.push(initProgram(gl, 'color', colorVs, colorFs, colorParams));\n  defs.push(initProgram(gl, 'texture', textureVs, textureFs, textureParams));\n\n  const compiled = compilePrograms(gl, defs);\n  return compiled.reduce((all, program) => ({\n    ...all,\n    ...program,\n  }), {});\n}\n","import bombBoss from './data/textures/bombBoss.png';\nimport spaceJunk from './data/textures/spaceJunk.png';\nimport { loadTexture } from './utilities/textures';\n\nexport function initTextures(gl) {\n  const defs = [];\n  defs.push({ name: 'bombBoss', image: bombBoss });\n  defs.push({ name: 'spaceJunk', image: spaceJunk });\n\n  return defs.reduce((all, def) => {\n    const texture = loadTexture(gl, def.image);\n    return {\n      ...all,\n      [def.name]: texture,\n    };\n  }, {});\n}\n","export default \"space-junk/ec333b19c587c80b191ec5494ec25d58.png\";","export default \"space-junk/7c29e0d6a2f36968586e1ddbaad89ae0.png\";","export function loadTexture(gl, url) {\n  const texture = gl.createTexture();\n\n  if (url) {\n    const image = new Image();\n    image.onload = function() {\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n      gl.generateMipmap(gl.TEXTURE_2D);\n    };\n    image.src = url;\n  }\n\n  return texture;\n}\n","import { initGl, updateGl } from './gl';\nimport { initMatrices, bindMatricesToProgram } from './utilities/matrices';\nimport { bindVerticesToProgram } from './utilities/vertices';\nimport { initBackground, updateBackground, drawBackground } from './background';\nimport { initCharacters, updateCharacters, drawCharacters } from './characters';\nimport { initInput } from './input';\nimport { initPrograms } from './programs';\nimport { initTextures } from './textures';\n\nfunction main() {\n  let state = initState();\n  const updateInput = initInput();\n\n  function update(timestamp) {\n    const input = updateInput(timestamp);\n    state = updateState(state, input);\n    draw(state);\n    window.requestAnimationFrame(update);\n  }\n  window.requestAnimationFrame(update);\n}\n\nfunction initState() {\n  const gl = initGl();\n  const textures = initTextures(gl);\n  const programs = initPrograms(gl);\n  const background = initBackground();\n  const characters = initCharacters();\n\n  return {\n    gl,\n    textures,\n    programs,\n    background,\n    characters,\n  };\n}\n\nfunction updateState(state, input) { //eslint-disable-line no-unused-vars\n  const gl = updateGl(state);\n  const textures = state.textures;\n  const programs = state.programs;\n  const background = updateBackground(state, input);\n  const characters = updateCharacters(state, input);\n\n  return {\n    gl,\n    textures,\n    programs,\n    background,\n    characters,\n  };\n}\n\nfunction draw(state) {\n  const { gl, textures, programs } = state;\n\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  drawBackground(state, vao);\n\n  const sets = drawCharacters(state, vao);\n  for (const set of sets) {\n    const matrices = initMatrices(state.background);\n    const texture = textures[set.texture];\n    const program = programs[set.program];\n    const sampler = gl.getUniformLocation(program, program.samplerName);\n\n    gl.useProgram(program);\n    bindMatricesToProgram(gl, matrices, program);\n    bindVerticesToProgram(gl, set, program);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(sampler, 0);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0.0, 0.0, gl.canvas.clientWidth, gl.canvas.clientHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, set.position.count);\n  }\n}\n\nwindow.onload = main;\n","export function initGl() {\n  const canvas = document.getElementById('canvas');\n  const gl = canvas.getContext('webgl2');\n\n  gl.canvas.style.position = 'absolute';\n  gl.canvas.style.top = '0';\n  gl.canvas.style.left = '0';\n\n  return gl;\n}\n\nexport function updateGl({ gl }) {\n  gl.canvas.width = window.innerWidth;\n  gl.canvas.height = window.innerHeight;\n\n  return gl;\n}\n","export function initInput() {\n  let frame = 0;\n  let lastTimestamp = 0;\n  let lastKeys = [];\n\n  window.onkeydown = (e) => {\n    lastKeys.push(e.key);\n  };\n\n  return (timestamp) => {\n    frame = frame + 1;\n    const hasFocus = document.hasFocus();\n    const dt = timestamp - lastTimestamp;\n    lastTimestamp = timestamp;\n    const keys = lastKeys;\n    lastKeys = [];\n\n    return {\n      frame,\n      hasFocus,\n      dt,\n      keys,\n    };\n  };\n}\n"],"sourceRoot":""}